
#ifndef _H_y_Amantya_NIAB_5gsacore
#define _H_y_Amantya_NIAB_5gsacore
/*
 * Copyright (c) 2008 - 2012, Andy Bierman, All Rights Reserved.
 * Copyright (c) 2012 - 2022, YumaWorks, Inc., All Rights Reserved.
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 */

/**
 * @file y_Amantya-NIAB-5gsacore.h
 * @brief YumaPro SIL header for module Amantya-NIAB-5gsacore
 *

*** Generated by yangdump-sdk 21.10-5

<pre>

    YumaPro SIL header
    module Amantya-NIAB-5gsacore
    revision 2022-12-15
    prefix amantya-niab
    namespace http://amantyatech.com/ns/yang/Amantya-NIAB-5gsacore
    organization Amantya Technologies
    Created: 2023-01-30T06:01:43Z

Online Developer Manual:
https://www.yumaworks.com/pub/21.10/dev/yumapro-dev-manual.html

    CLI parameters:
        format yh
        indent 4
        module Amantya-NIAB-5gsacore
        output y_Amantya-NIAB-5gsacore.h
        unified true
</pre>

 */

#include <xmlstring.h>

#include "procdefs.h"
#include "dlq.h"
#include "ncxtypes.h"
#include "op.h"
#include "status.h"
#include "val.h"

#ifdef __cplusplus
extern "C" {
#endif

/**
 * @addtogroup yang-library YANG Library
 *
 * Collection of modules supported by the server.
 * Generated by yangdump-sdk.
 */



/**
 * @addtogroup sil-Amantya-NIAB-5gsacore Module Amantya-NIAB-5gsacore
 * @ingroup yang-library
 *
 * @{
 *
 * YANG instrumentation library.
 * Generated by yangdump-sdk.
 */



#define y_amantya_niab_M_amantya_niab (const xmlChar *)"Amantya-NIAB-5gsacore"

#define y_amantya_niab_R_amantya_niab (const xmlChar *)"2022-12-15"

#define y_amantya_niab_N_af (const xmlChar *)"af"
#define y_amantya_niab_N_alarmSource (const xmlChar *)"alarmSource"
#define y_amantya_niab_N_alarmType (const xmlChar *)"alarmType"
#define y_amantya_niab_N_alarms (const xmlChar *)"alarms"
#define y_amantya_niab_N_amf (const xmlChar *)"amf"
#define y_amantya_niab_N_ausf (const xmlChar *)"ausf"
#define y_amantya_niab_N_bsf (const xmlChar *)"bsf"
#define y_amantya_niab_N_change_contanier_state (const xmlChar *)"change-contanier-state"
#define y_amantya_niab_N_changedState (const xmlChar *)"changedState"
#define y_amantya_niab_N_clearAlarm (const xmlChar *)"clearAlarm"
#define y_amantya_niab_N_containerState (const xmlChar *)"containerState"
#define y_amantya_niab_N_containerType (const xmlChar *)"containerType"
#define y_amantya_niab_N_description (const xmlChar *)"description"
#define y_amantya_niab_N_discover_device (const xmlChar *)"discover-device"
#define y_amantya_niab_N_edit_niab (const xmlChar *)"edit-niab"
#define y_amantya_niab_N_fileUpdated (const xmlChar *)"fileUpdated"
#define y_amantya_niab_N_gnb (const xmlChar *)"gnb"
#define y_amantya_niab_N_hw_version (const xmlChar *)"hw_version"
#define y_amantya_niab_N_impactedEntity (const xmlChar *)"impactedEntity"
#define y_amantya_niab_N_ip_add (const xmlChar *)"ip_add"
#define y_amantya_niab_N_is_device_added (const xmlChar *)"is_device_added"
#define y_amantya_niab_N_manufacturer (const xmlChar *)"manufacturer"
#define y_amantya_niab_N_name (const xmlChar *)"name"
#define y_amantya_niab_N_nef (const xmlChar *)"nef"
#define y_amantya_niab_N_newConfig (const xmlChar *)"newConfig"
#define y_amantya_niab_N_niab (const xmlChar *)"niab"
#define y_amantya_niab_N_niab_containers_af (const xmlChar *)"niab_containers_af"
#define y_amantya_niab_N_niab_containers_amf (const xmlChar *)"niab_containers_amf"
#define y_amantya_niab_N_niab_containers_ausf (const xmlChar *)"niab_containers_ausf"
#define y_amantya_niab_N_niab_containers_bsf (const xmlChar *)"niab_containers_bsf"
#define y_amantya_niab_N_niab_containers_gnb (const xmlChar *)"niab_containers_gnb"
#define y_amantya_niab_N_niab_containers_nef (const xmlChar *)"niab_containers_nef"
#define y_amantya_niab_N_niab_containers_nrf (const xmlChar *)"niab_containers_nrf"
#define y_amantya_niab_N_niab_containers_nssf (const xmlChar *)"niab_containers_nssf"
#define y_amantya_niab_N_niab_containers_pcf (const xmlChar *)"niab_containers_pcf"
#define y_amantya_niab_N_niab_containers_smf (const xmlChar *)"niab_containers_smf"
#define y_amantya_niab_N_niab_containers_udm (const xmlChar *)"niab_containers_udm"
#define y_amantya_niab_N_niab_containers_upf (const xmlChar *)"niab_containers_upf"
#define y_amantya_niab_N_nrf (const xmlChar *)"nrf"
#define y_amantya_niab_N_nssf (const xmlChar *)"nssf"
#define y_amantya_niab_N_oldConfig (const xmlChar *)"oldConfig"
#define y_amantya_niab_N_password (const xmlChar *)"password"
#define y_amantya_niab_N_pcf (const xmlChar *)"pcf"
#define y_amantya_niab_N_port (const xmlChar *)"port"
#define y_amantya_niab_N_register_device (const xmlChar *)"register-device"
#define y_amantya_niab_N_serial (const xmlChar *)"serial"
#define y_amantya_niab_N_severity (const xmlChar *)"severity"
#define y_amantya_niab_N_smf (const xmlChar *)"smf"
#define y_amantya_niab_N_sw_version (const xmlChar *)"sw_version"
#define y_amantya_niab_N_timeRaised (const xmlChar *)"timeRaised"
#define y_amantya_niab_N_type (const xmlChar *)"type"
#define y_amantya_niab_N_udm (const xmlChar *)"udm"
#define y_amantya_niab_N_updateConfigurtion (const xmlChar *)"updateConfigurtion"
#define y_amantya_niab_N_upf (const xmlChar *)"upf"
#define y_amantya_niab_N_user (const xmlChar *)"user"



/**
 * @brief Phase 1: Initialize the Amantya-NIAB-5gsacore server instrumentation library.
 *
 * Called by server when module is loaded.
 *
 * @param modname requested module name to load
 * @param revision requested revision date of the module to load.
 * This may be NULL if the module has no revision statements.
 * @return return status. An error will cause the module load to fail.
 */
extern status_t y_Amantya_NIAB_5gsacore_init (
    const xmlChar *modname,
    const xmlChar *revision);


/**
 * @brief Phase 2: Initialize the Amantya-NIAB-5gsacore server instrumentation library.
 *
 * SIL init phase 2: non-config data structures.
 * Called after running config is loaded.
 *
 * @return return status. An error will cause the
 * server initialization to fail.
 */
extern status_t y_Amantya_NIAB_5gsacore_init2 (void);


/**
 * @brief Cleanup the Amantya-NIAB-5gsacore server instrumentation library.
 *
 * Called by server when module is unloaded.
 *
 */
extern void y_Amantya_NIAB_5gsacore_cleanup (void);


 /** @} */

#ifdef __cplusplus
} /* end extern 'C' */
#endif

#endif
